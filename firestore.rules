rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read areas and audits
    match /areas/{areaId} {
      allow read: if request.auth != null;
      // Only admins can write to areas
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.token.email)) &&
        get(/databases/$(database)/documents/admins/$(request.auth.token.email)).data.status == 'active';
    }
    
    // Allow authenticated users to read and write audit logs
    match /audits/{areaId} {
      allow read, write: if request.auth != null;
    }
    
    // Only admins can read/write admin documents
    match /admins/{adminId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.token.email)) &&
        get(/databases/$(database)/documents/admins/$(request.auth.token.email)).data.status == 'active';
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.token.email)) &&
        get(/databases/$(database)/documents/admins/$(request.auth.token.email)).data.status == 'active';
    }
    
    // For development/demo only - allow all access (less secure)
    // Uncomment the following rule and comment out the rules above for testing
    // match /{document=**} {
    //   allow read, write: if request.auth != null;
    // }
  }
}
